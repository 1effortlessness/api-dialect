/*
 * 生成一个参数对象
 */

class Arg {
  constructor (name, required = false, type) {
    this.name = name
    this.required = required
    this.type = type
  }

  setDateFormat (format) {
    this.dateFormat = format

    return this
  }

  setDefault (dft) {
    this.dft = dft

    return this
  }

  setStrict (x) {
    this.strict = x || true

    return this
  }

  setRequired (x) {
    this.required = x || true

    return this
  }

  setRange (range, ...rest) {
    if (Array.isArray(range)) {
      this.range = [...range, ...rest]
    } else {
      this.range = [range, ...rest]
    }

    return this
  }

  static factory (model, method = 'post') {
    let attributes = model.rawAttributes
    let args = []

    Object.keys(attributes).forEach(k => {
      let v = attributes[k]

      if (method === 'post' || method === 'put') {
        if (v.hasOwnProperty('readOnly') && v.readOnly && !v.primaryKey) {
          return undefined
        }

        if (
          method === 'post' &&
          (
            v.primaryKey && v.type.constructor.name === 'Constructor' ||
            v.hasOwnProperty('_autoGenerated')
          )
        ) {
          return undefined
        }

        if (
          method === 'put' &&
          v.hasOwnProperty('_autoGenerated')
        ) {
          return undefined
        }
      }
      let arg = new Arg(k, false)

      if (v.hasOwnProperty('values') && v.values.length !== 0) {
        arg.setRange(v.values)
      }

      if (v.hasOwnProperty('allowNull') && !v.allowNull && !v.hasOwnProperty('defaultValue')) {
        arg.setRequired()
      }

      if (v.hasOwnProperty('defaultValue')) {
        arg.setDefault(v.defaultValue)
      }

      if (v.type.key === 'DECIMAL') {
        arg.type = 'number'
      }

      if (v.type.key === 'INTEGER') {
        arg.type = 'integer'
      }

      if (v.type.key === 'DATEONLY') {
        arg.setDateFormat('YYYY-MM-DD')
      }

      if (v.type.key === 'DATE') {
        arg.setDateFormat('YYYY-MM-DD HH:mm:ss')
      }

      args.push(arg)

      return undefined
    })

    return args
  }
}

module.exports = Arg
